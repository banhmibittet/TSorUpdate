let eventDelayMin = 50;
let eventDelayMax = 200;
let moveEventDelayMin = 10;
let moveEventDelayMax = 20;
let wheelEventDelayMin = 200;
let wheelEventDelayMax = 300;
let postDelayMin = 1000;
let postDelayMax = 2000;

let scrollDownDistanceMin = 500;
let scrollDownDistanceMax = 1500;
let scrollUpDistanceMax = -1500;
let scrollUpDistanceMin = -500;

let actions = {
  getCurrentUrl: 'getCurrentUrl',
  sendLog: 'sendLog',
  //click: 'click',
  //clickByText: 'clickByText',
  //clickByElement: 'clickByElement',
  //clickRandom: 'clickRandom',
  //sendText: 'sendText',
  //sendTextByText: 'sendTextByText',
  quickScanElement: 'quickScanElement',
  quickScanElementByText: 'quickScanElementByText',
  getHrefElements: 'getHrefElements',
  getElementPositionOnScreen: 'getElementPositionOnScreen',
  getRandomVisibleElementPositionOnScreen: 'getRandomVisibleElementPositionOnScreen',
  getPositionOnScreen: 'getPositionOnScreen',
  findElement: 'findElement',
  findElementByText: 'findElementByText',
  findElements: 'findElements',
  findElementsByText: 'findElementsByText',
  navigate: 'navigate',
  isElementVisible: 'isElementVisible',
  isElementVisibleByText: 'isElementVisibleByText',
  getDistanceToElement: 'getDistanceToElement',
  getDistanceToRandomElement: 'getDistanceToRandomElement',
  getDistanceToElementByText: 'getDistanceToElementByText',
  //scroll: 'scroll'
};


async function delay(ms) {
  let start = Date.now();
  let elapsed = 0;
  while (elapsed < ms) {
      elapsed = Date.now() - start;
      // You can use this loop for any other necessary tasks while waiting
      console.log('delaying ' + elapsed);
      await new Promise((resolve) => setTimeout(resolve, 100));
  }
}

function random(min, max) {
  return Math.random() * (max - min) + min;
}

function randomRoll() {
  // Generate a random number between 0 and 99
  return Math.floor(Math.random() * 100);
}

function clamp(value, min, max) {
  return Math.min(Math.max(value, min), max);
}

function randomPickInArray(value) {
  return value[Math.floor(Math.random() * value.length)];
}

function eventLog() {
  // Mouse event listeners
  document.addEventListener('wheel', function (event) {
    console.log('DeltaY:', event.deltaY, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('mousemove', function (event) {
    console.log('Mouse X:', event.clientX, 'Mouse Y:', event.clientY, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('mouseenter', function (event) {
    console.log('Mouse entered:', event.target, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('mousedown', function (event) {
    console.log('Mouse button down:', event.button, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('mouseup', function (event) {
    console.log('Mouse button up:', event.button, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('click', function (event) {
    console.log('Element clicked:', event.target, 'Is Trusted:', event.isTrusted);
  });

  // Keyboard event listeners
  document.addEventListener('keydown', function (event) {
    console.log('Key down:', event.key, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('keyup', function (event) {
    console.log('Key up:', event.key, 'Is Trusted:', event.isTrusted);
  });

  document.addEventListener('keypress', function (event) {
    console.log('Key pressed:', event.key, 'Is Trusted:', event.isTrusted);
  });

  // element.addEventListener('focus', function (event) {
  //   // Log a message when an element is clicked
  //   console.log('Input field focused:', event.target, 'Is Trusted:', event.isTrusted);
  // });
}
